[build-system]
requires      = ["setuptools>=62.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "palo"
version = "0.0.0"
description = "Assignment for Palo"
readme = "README.md"
authors = [{ name = "pallavbakshi", email = "pallavbakshi@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
keywords = ["assignment", "palo"]
dependencies = []
requires-python = ">=3.9.13"

[project.optional-dependencies]
dev = []

[project.urls]
Homepage = "https://github.com/pallavbakshi/palo-it-assignment"

[project.scripts]
tiptoe = "palo.__main__:main"

[tool.bumpver]
current_version = "0.0.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "Bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/palo/__init__.py" = ["{version}"]

[tool.black]
# How to exclude folders from black ðŸ‘‡
# https://stackoverflow.com/a/60840576/5576491
exclude = '''
/(
    \.git
  | scripts
  | whitelist.py
)/
'''
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/foo.py  # exclude a file named foo.py in the root of the project (in addition to the defaults)
'''

[tool.vulture]
#exclude = ["file*.py", "dir/"]
exclude = ["tests/"]
ignore_decorators = ["@app.route", "@require_*"]
#ignore_names = ["visit_*", "do_*"]
make_whitelist = true
min_confidence = 60
paths = ["src", "scripts"]
sort_by_size = true
#verbose = true

# mypy global options:
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
exclude = [
    '^setup.py',
    '^whitelist\.py$',  # TOML literal string (single-quotes, no escaping necessary)
#    "^file2\\.py$",  # TOML basic string (double-quotes, backslash and other characters need escaping)
]

# mypy per-module options:
#[[tool.mypy.overrides]]
#module = "mycode.foo.*"
#disallow_untyped_defs = true
#
#[[tool.mypy.overrides]]
#module = "mycode.bar"
#warn_return_any = false
#
#[[tool.mypy.overrides]]
#module = [
#    "somelibrary",
#    "some_other_library"
#]
#ignore_missing_imports = true
